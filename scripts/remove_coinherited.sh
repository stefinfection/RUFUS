#!/bin/bash                                                                                                                         

module load bcftools
module load htslib
module load vt
module load samtools
module load bwa

# UPDATED TO NEW VERSION SJG 09Aug2024
# This script removes inherited variants called by rufus which lie on the same contig as
# a somatic variant. It accomplishes this task by performing a pileup and variant call
# in the control bam for each of the rufus-identified variants, then taking the complement
# of the control set in an intersection.

# parse command line arguments
REFERENCE_FILE=$1  # Reference file (.fa) - must be the same as RUFUS run that generated RUFUS_VCF
RUFUS_VCF=$2       # The 'FINAL' vcf generated by rufus, to be isec'd
SAMPLE_NAME=$3     # Sample name, used in vcf output file name
ARG_LIST=("$@")
CONTROL_BAM_LIST=("${ARG_LIST[@]:3}") # Remaining args, all control bams

echo "Arguments provided to inherited removal script: $@"
echo "Control bam list is ${ARG_LIST[@]:3}"

# static vars
OUT_VCF="$SAMPLE_NAME.FINAL.normalized.vcf.gz"
CONTROL_ALIGNED="temp_aligned.bam"
CONTROL_VCF="isec_control.vcf.gz"

# make intersection directory
ISEC_OUT_DIR="temp_isecs"
mkdir "${ISEC_OUT_DIR}"

#format final rufus vcf for intersections
vt normalize -n $RUFUS_VCF -r $REFERENCE_FILE | vt decompose_blocksub - | bgzip > $OUT_VCF
bcftools index -t $OUT_VCF

#for loop for each control file provided by user
for CONTROL in "${CONTROL_BAM_LIST[@]}"; do
    MADE_ALIGN_CONTROL=false
    
    #check to see if the provided bam file is aligned
    if [ "$(samtools view -H "$CONTROL" | grep -c '^@SQ')" -gt 0 ]; then
        CONTROL_BAM=$CONTROL
    else
        bwa mem -t 40 $REFERENCE_FILE $CONTROL | samtools view -S -@ 12 -b - > $CONTROL_ALIGNED
        CONTROL_BAM=$CONTROL_ALIGNED
	    MADE_ALIGN_CONTROL=true
    fi
    
    #run pileup and call variants
    bcftools mpileup -d600 -T $OUT_VCF -f $REFERENCE_FILE $CONTROL_BAM | bcftools call -cv -Oz -o $CONTROL_VCF 
    bcftools index -t $CONTROL_VCF
    	
    #intersect the control vcf with formatted rufus vcf
    bcftools isec -Oz -w1 -n=1 -p $ISEC_OUT_DIR $OUT_VCF $CONTROL_VCF
        
    # save the new vcf as rufus final vcf
	  OUTFILE=$ISEC_OUT_DIR/0000.vcf.gz
    OUT_INDEX=$ISEC_OUT_DIR/0000.vcf.gz.tbi

    cp $OUTFILE $OUT_DIR/"$SAMPLE_NAME.FINAL.no_inherited.vcf.gz" 
    cp $OUT_INDEX $OUT_DIR/"$SAMPLE_NAME.FINAL.no_inherited.vcf.gz.tbi" 

    # clean up aligned control file, if it exists
	if [ "$MADE_CONTROL_BAM" = true ]; then
    	rm $CONTROL_ALIGNED
	fi
done
